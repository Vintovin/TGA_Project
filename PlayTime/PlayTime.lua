local HTTP = game:GetService("HttpService")
local IP = "0.0.0.0"
local yes = {}


_G.Playtime = {}



--###########################################################################################################
--//////////////////////////////////////////Return Statement Object//////////////////////////////////////////
--###########################################################################################################
--#######################################################
--#######################################################  Return Statement
--#######################################################
local ReturnStatement = {}
ReturnStatement.__index = ReturnStatement
--#######################################################
--#######################################################
function ReturnStatement.new(code,data)
	local NewStatement = {}
	setmetatable(NewStatement,ReturnStatement)
	
	NewStatement.Code = code
	NewStatement.Data = data
	
	return(NewStatement)
end
--#######################################################
--#######################################################
--#######################################################
--###########################################################################################################
--///////////////////////////////////////////////Local Functions/////////////////////////////////////////////
--###########################################################################################################
--#######################################################
--#######################################################  Calculate Points
--#######################################################
local function CalculatePoints(TimeElapsed)
	local Minutes = TimeElapsed/60
	local Points = math.floor(Minutes/5)
	return(Points)
end
--#######################################################
--#######################################################  Submit
--#######################################################
local function SubmitUserPoints(sendData)
	
	local response = HTTP:PostAsync(IP,sendData,Enum.HttpContentType.TextPlain,false)
	print(response)
end
--#######################################################
--#######################################################
--#######################################################
--###########################################################################################################
--//////////////////////////////////////////////Module Functions/////////////////////////////////////////////
--###########################################################################################################
--#######################################################
--#######################################################  Test
--#######################################################
yes.test = function()
    print("This is a test")
end
--#######################################################
--#######################################################  UserJoin
--#######################################################
yes.UserJoined = function(plr)
	local NewUser = {}
	NewUser.JoinTime = tick()
	NewUser.LeaveTime = nil
	NewUser.UID = plr.UserId
	
	_G.Playtime[plr.Name] = NewUser
	return(ReturnStatement.new("suc",NewUser))
end
--#######################################################
--#######################################################  UserLeave
--#######################################################
yes.UserLeaving = function(plr)
	local User = _G.Playtime[plr.Name]
	User.LeaveTime = tick()
	local TimeElaplsed = User.LeaveTime - User.JoinTime
	local Points = CalculatePoints(TimeElaplsed)
	print("------------\n"..Points.."------------ \n"..TimeElaplsed.."\n----------------")
	
	User.TimeElapsed = TimeElaplsed
	User.Points = Points
	SubmitUserPoints(User)
end
--#######################################################
--#######################################################
--#######################################################
--###########################################################################################################
--///////////////////////////////////////////////////Returns/////////////////////////////////////////////////
--###########################################################################################################
return(yes)
